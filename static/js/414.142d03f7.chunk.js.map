{"version":3,"file":"static/js/414.142d03f7.chunk.js","mappings":"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","sources":["App/api.jsx","components/MoviesList/MoviesList.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '2e1e1d7377ff577a1effb61af070f65d';\n\nexport const getTrendingHome = async () => {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}&language=en-US`);\n  \n    return data.results;\n  };\n\nexport const getSearchMovies = async query => {\n\nconst { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n);\n\nreturn data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\n\nexport const getReviewsMovie = async movieId => {\n  \n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data.results;\n};","import { useLocation, Link } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      {movies.map(({ id, original_title }) => (\n        <li key={id}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </>\n  );\n};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\n\n\n\nexport const Form = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n  \n  const handleSearchParams = e => {\n    setQuery(e.target.value);\n    };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    \n    if (query.trim() === '') {\n      toast.info('Please, enter search movies!');\n      return;\n    }\n    setSearchParams({query});\n    reset();\n  };\n\n  const reset = () => {\n    setQuery('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Search movie\"\n        autoFocus\n        value={query}\n        onChange={handleSearchParams}\n      />\n      <button type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport {getSearchMovies} from 'App/api';\nimport {Form} from 'components/Form/Form';\nimport {MoviesList} from 'components/MoviesList/MoviesList'\n\nexport default function Movies() {\n\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n   \n\n    useEffect(() => {\n        const currentQuery = searchParams.get('query');\n        if (!currentQuery) return;\n    \n        const fetchSearchMovie = async () => {\n          try {\n            const searchMovies = await getSearchMovies(currentQuery);\n            setMovies(searchMovies);\n          } catch (error) {\n            console.log(error);\n          }\n        };\n        fetchSearchMovie();\n      }, [searchParams]);\n\n    return (\n    <>\n    <Form setSearchParams={setSearchParams} />\n    {movies.length> 0 && <MoviesList movies={movies} />}\n    </>\n    )\n}"],"names":["axios","API_KEY","getTrendingHome","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","results","stop","apply","arguments","getSearchMovies","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","getMovieById","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getCastMovie","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getReviewsMovie","_ref5","_callee5","_yield$axios$get5","_context5","_x4","MoviesList","movies","location","useLocation","_jsx","_Fragment","children","map","id","original_title","Link","state","from","to","Form","setSearchParams","_useState","useState","_useState2","_slicedToArray","setQuery","reset","_jsxs","onSubmit","e","preventDefault","trim","toast","type","placeholder","autoFocus","value","onChange","target","Movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","useEffect","currentQuery","get","fetchSearchMovie","searchMovies","t0","console","log","length"],"sourceRoot":""}